package Arithmetic;
public class Add implements Compatable
{    
    public double x,y;
    public Add(int a,int b)
    {
        x=a;
        y=b;
    }
    public double  calculate()
    {
        return x+y;
    }
}



package Arithmetic;
public interface Compatable
{
    public double calculate();
}




// Source code is decompiled from a .class file using FernFlower decompiler.
package Arithmetic;

public class Mul implements Compatable {
   public double x;
   public double y;

   public Mul(int var1, int var2) {
      this.x = (double)var1;
      this.y = (double)var2;
   }

   public double calculate() {
      return this.x * this.y;
   }
}



import Arithmetic.*;
public class demo 
{
    public static void main(String arg[])
    {
        Mul h=new Mul(3,3);
        Add x=new Add(3,3);
        Sub s=new Sub(3,3);
        System.out.println("add="+x.calculate()+"\n sub="+s.calculate()+"\nmul="+h.calculate());
    }
}



// Source code is decompiled from a .class file using FernFlower decompiler.
package Arithmetic;

public class Sub implements Compatable {
   public double x;
   public double y;

   public Sub(int var1, int var2) {
      this.x = (double)var1;
      this.y = (double)var2;
   }

   public double calculate() {
      return this.x - this.y;
   }
}
